#!/bin/bash

set -o errexit
set -o xtrace

declare -A SERVICES=(
    ["rds"]="innodb_sb innodb_sb_spike"
    ["md"]="innodb_sb innodb_sb_spike innodb_extra aria_sb deadlock_holder deadlock_requestor defrag_sb defrag_extra onlineddl_sb onlineddl_extra"
    ["ps55"]="innodb_sb innodb_sb_spike innodb_extra myisam_sb myisam_extra small_sb small_extra"
    ["ps56"]="innodb_sb innodb_sb_spike innodb_extra myisam_sb myisam_extra small_sb small_extra"
    ["ps57"]="innodb_sb innodb_sb_spike innodb_extra myisam_sb myisam_extra small_sb small_extra tokudb_sb tokudb_extra"
    ["ps57r"]="innodb_sb_readonly innodb_extra small_sb"
    ["pxc56-1"]="innodb_sb innodb_sb_spike innodb_extra small_sb small_update"
    ["pxc56-2"]="innodb_sb_2 innodb_sb_spike_2 innodb_extra_2"
    ["pxc56-3"]="innodb_sb_3 innodb_sb_spike_3 innodb_extra_3 cluster_mess"
    ["pxc57-1"]="innodb_sb innodb_sb_spike innodb_extra small_sb small_update"
    ["pxc57-2"]="innodb_sb_2 innodb_sb_spike_2 innodb_extra_2"
    ["pxc57-3"]="innodb_sb_3 innodb_sb_spike_3 innodb_extra_3 cluster_mess"
    ["psrocksdb"]="innodb_sb innodb_sb_spike innodb_extra small_sb small_extra rocksdb_sb rocksdb_extra"
    ["pg10"]="postgres_sb"
)

ROOT_DIR=$(realpath "$(dirname $0)")

remove_all() {
    local SOCKET_NAME=$1
    pushd $ROOT_DIR/loader
        for LOADER in $(ls); do
            if [ -e "/etc/systemd/system/loader-${LOADER}-${SOCKET_NAME}.service" ]; then
                systemctl --no-reload disable "loader-${LOADER}-${SOCKET_NAME}" > /dev/null 2>&1 || :
                systemctl stop "loader-${LOADER}-${SOCKET_NAME}" > /dev/null 2>&1 || :
            fi
        done
    popd
}

create_loader() {
    local LOADER=$1
    local SOCKET_PATH=$2
    local SOCKET_NAME=$(basename $SOCKET_PATH | sed -e 's/[.].*//')
    cat - <<-EOF >/etc/systemd/system/loader-${LOADER}-${SOCKET_NAME}.service
		[Unit]
		Description=PMM Loader ${LOADER} for ${SOCKET_NAME} socket

		[Service]
		StartLimitInterval=5
		StartLimitBurst=10
		ExecStart=$ROOT_DIR/loader/${LOADER} $SOCKET_PATH
		Restart=always
		RestartSec=120

		[Install]
		WantedBy=multi-user.target
	EOF
    systemctl preset "loader-${LOADER}-${SOCKET_NAME}"
    systemctl enable "loader-${LOADER}-${SOCKET_NAME}"
    systemctl start  "loader-${LOADER}-${SOCKET_NAME}"
}

main() {
    local TYPE=$1
    local SOCKET_PATH=$2
    local SOCKET_NAME=$(basename $SOCKET_PATH | sed -e 's/[.].*//')

    if [[ -z "$TYPE" ]] || [[ -z "${SERVICES[$TYPE]}" ]]; then
        echo "unknown server type"
        echo "usage: $0 {ps|pxc|mo|ms|md} /path/to/service.socket"
        exit 1
    fi
    if [ -S "$SOCKET_PATH" ]; then
        CONNECTION="--socket=$SOCKET_PATH"
    elif nslookup "$SOCKET_PATH"; then
        CONNECTION="--host=$SOCKET_PATH"
    else
        echo "cannot find $SOCKET_PATH socket or host"
        echo "usage: $0 {ps|pxc|mo|ms|md} /path/to/service.socket"
        exit 1
    fi
    CONNECTION+=" --user ${MYSQL_USER:-root}"
    [ -n "$MYSQL_PASSWORD" ] && CONNECTION+=" -p${MYSQL_PASSWORD}" || :

    remove_all "$SOCKET_NAME"

    mysql $CONNECTION < $ROOT_DIR/grants.sql
    for LOADER in ${SERVICES[$TYPE]}; do
        create_loader "$LOADER" "$SOCKET_PATH" "$SOCKET_NAME"
    done
}

main "$@"
exit 0
